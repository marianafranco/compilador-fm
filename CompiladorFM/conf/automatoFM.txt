## Automato ##
1.programa
	 final: 82, 1, 
	 (0, "estrut") -> 3
	 (0, tipo) -> 22
	 (0, "principal") -> 61
	 (2, "estrut") -> 3
	 (2, tipo) -> 22
	 (2, "principal") -> 61
	 (3, "{") -> 4
	 (4, tipo) -> 5
	 (5, identificador) -> 6
	 (6, "[") -> 8
	 (6, ";") -> 11
	 (8, numero) -> 9
	 (9, "]") -> 10
	 (10, ";") -> 11
	 (7, ";") -> 11
	 (11, tipo) -> 13
	 (11, "}") -> 20
	 (12, tipo) -> 13
	 (12, "}") -> 20
	 (13, identificador) -> 14
	 (14, "[") -> 16
	 (14, ";") -> 19
	 (16, numero) -> 17
	 (17, "]") -> 18
	 (18, ";") -> 19
	 (15, ";") -> 19
	 (19, tipo) -> 13
	 (19, "}") -> 20
	 (20, "estrut") -> 3
	 (20, tipo) -> 22
	 (20, "principal") -> 61
	 (21, tipo) -> 22
	 (21, "principal") -> 61
	 (22, identificador) -> 23
	 (23, "(") -> 24
	 (24, tipo) -> 26
	 (24, ")") -> 40
	 (26, identificador) -> 27
	 (27, "[") -> 29
	 (27, ",") -> 33
	 (27, ")") -> 40
	 (29, numero) -> 30
	 (30, "]") -> 31
	 (31, ",") -> 33
	 (31, ")") -> 40
	 (28, ",") -> 33
	 (28, ")") -> 40
	 (32, ",") -> 33
	 (32, ")") -> 40
	 (33, tipo) -> 34
	 (34, identificador) -> 35
	 (35, "[") -> 37
	 (35, ",") -> 33
	 (35, ")") -> 40
	 (37, numero) -> 38
	 (38, "]") -> 39
	 (39, ",") -> 33
	 (39, ")") -> 40
	 (36, ",") -> 33
	 (36, ")") -> 40
	 (25, ")") -> 40
	 (40, "{") -> 41
	 (41, comando) -> 43
	 (41, "retorno") -> 44
	 (42, comando) -> 43
	 (42, "retorno") -> 44
	 (43, comando) -> 43
	 (43, "retorno") -> 44
	 (44, identificador) -> 46
	 (44, expressao) -> 53
	 (44, numero) -> 54
	 (44, """) -> 55
	 (44, booleano) -> 58
	 (46, "[") -> 48
	 (46, ";") -> 59
	 (48, numero) -> 50
	 (48, expressao) -> 51
	 (50, "]") -> 52
	 (51, "]") -> 52
	 (49, "]") -> 52
	 (52, ";") -> 59
	 (47, ";") -> 59
	 (53, ";") -> 59
	 (54, ";") -> 59
	 (55, seq_caracteres) -> 56
	 (56, """) -> 57
	 (57, ";") -> 59
	 (58, ";") -> 59
	 (45, ";") -> 59
	 (59, "}") -> 60
	 (60, tipo) -> 22
	 (60, "principal") -> 61
	 (61, "(") -> 62
	 (62, tipo) -> 64
	 (62, ")") -> 78
	 (64, identificador) -> 65
	 (65, "[") -> 67
	 (65, ",") -> 71
	 (65, ")") -> 78
	 (67, numero) -> 68
	 (68, "]") -> 69
	 (69, ",") -> 71
	 (69, ")") -> 78
	 (66, ",") -> 71
	 (66, ")") -> 78
	 (70, ",") -> 71
	 (70, ")") -> 78
	 (71, tipo) -> 72
	 (72, identificador) -> 73
	 (73, "[") -> 75
	 (73, ",") -> 71
	 (73, ")") -> 78
	 (75, numero) -> 76
	 (76, "]") -> 77
	 (77, ",") -> 71
	 (77, ")") -> 78
	 (74, ",") -> 71
	 (74, ")") -> 78
	 (63, ")") -> 78
	 (78, "{") -> 79
	 (79, comando) -> 81
	 (79, "}") -> 82
	 (80, comando) -> 81
	 (80, "}") -> 82
	 (81, comando) -> 81
	 (81, "}") -> 82
2.comando
	 final: 0, 9, 24, 40, 56, 62, 57, 71, 81, 89, 2, 1, 
	 (0, tipo) -> 3
	 (0, "enquanto") -> 25
	 (0, "se") -> 41
	 (0, "entrada") -> 72
	 (0, "saida") -> 82
	 (0, identificador) -> 90
	 (3, identificador) -> 4
	 (4, "[") -> 6
	 (4, ";") -> 9
	 (6, numero) -> 7
	 (7, "]") -> 8
	 (8, ";") -> 9
	 (5, ";") -> 9
	 (10, "[") -> 12
	 (10, "=") -> 17
	 (12, numero) -> 14
	 (12, expressao) -> 15
	 (14, "]") -> 16
	 (15, "]") -> 16
	 (13, "]") -> 16
	 (16, "=") -> 17
	 (11, "=") -> 17
	 (17, expressao) -> 19
	 (17, """) -> 20
	 (17, booleano) -> 23
	 (19, ";") -> 24
	 (20, seq_caracteres) -> 21
	 (21, """) -> 22
	 (22, ";") -> 24
	 (23, ";") -> 24
	 (18, ";") -> 24
	 (25, "(") -> 26
	 (26, expressao) -> 27
	 (27, ">") -> 29
	 (27, "<") -> 30
	 (27, ">=") -> 31
	 (27, "<=") -> 32
	 (27, "==") -> 33
	 (27, "!=") -> 34
	 (29, expressao) -> 35
	 (30, expressao) -> 35
	 (31, expressao) -> 35
	 (32, expressao) -> 35
	 (33, expressao) -> 35
	 (34, expressao) -> 35
	 (28, expressao) -> 35
	 (35, ")") -> 36
	 (36, "{") -> 37
	 (37, comando) -> 39
	 (37, "}") -> 40
	 (38, comando) -> 39
	 (38, "}") -> 40
	 (39, comando) -> 39
	 (39, "}") -> 40
	 (41, "(") -> 42
	 (42, expressao) -> 43
	 (43, ">") -> 45
	 (43, "<") -> 46
	 (43, ">=") -> 47
	 (43, "<=") -> 48
	 (43, "==") -> 49
	 (43, "!=") -> 50
	 (45, expressao) -> 51
	 (46, expressao) -> 51
	 (47, expressao) -> 51
	 (48, expressao) -> 51
	 (49, expressao) -> 51
	 (50, expressao) -> 51
	 (44, expressao) -> 51
	 (51, ")") -> 52
	 (52, "{") -> 53
	 (53, comando) -> 55
	 (53, "}") -> 56
	 (54, comando) -> 55
	 (54, "}") -> 56
	 (55, comando) -> 55
	 (55, "}") -> 56
	 (56, "senao") -> 58
	 (58, "{") -> 59
	 (59, comando) -> 61
	 (59, "}") -> 62
	 (60, comando) -> 61
	 (60, "}") -> 62
	 (61, comando) -> 61
	 (61, "}") -> 62
	 (63, "(") -> 64
	 (64, expressao) -> 66
	 (64, ")") -> 70
	 (66, ",") -> 68
	 (66, ")") -> 70
	 (67, ",") -> 68
	 (67, ")") -> 70
	 (68, expressao) -> 69
	 (69, ",") -> 68
	 (69, ")") -> 70
	 (65, ")") -> 70
	 (70, ";") -> 71
	 (72, ">>") -> 73
	 (73, identificador) -> 74
	 (74, "[") -> 76
	 (74, ";") -> 81
	 (76, numero) -> 78
	 (76, expressao) -> 79
	 (78, "]") -> 80
	 (79, "]") -> 80
	 (77, "]") -> 80
	 (80, ";") -> 81
	 (75, ";") -> 81
	 (82, "<<") -> 83
	 (83, expressao) -> 85
	 (83, """) -> 86
	 (85, ";") -> 89
	 (86, seq_caracteres) -> 87
	 (87, """) -> 88
	 (88, ";") -> 89
	 (84, ";") -> 89
	 (90, "[") -> 12
	 (90, "=") -> 17
	 (90, "(") -> 64
3.expressao
	 final: 3, 9, 4, 27, 28, 31, 2, 32, 37, 43, 38, 61, 62, 65, 36, 66, 71, 77, 72, 95, 96, 99, 70, 100, 105, 111, 106, 129, 130, 133, 104, 1, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
	 (0, numero) -> 28
	 (0, "(") -> 29
	 (0, identificador) -> 134
	 (3, "[") -> 5
	 (3, "*") -> 34
	 (3, "/") -> 35
	 (3, "+") -> 68
	 (3, "-") -> 69
	 (5, numero) -> 7
	 (5, expressao) -> 8
	 (7, "]") -> 9
	 (8, "]") -> 9
	 (6, "]") -> 9
	 (9, "*") -> 34
	 (9, "/") -> 35
	 (9, "+") -> 68
	 (9, "-") -> 69
	 (4, "*") -> 34
	 (4, "/") -> 35
	 (4, "+") -> 68
	 (4, "-") -> 69
	 (10, "(") -> 11
	 (11, expressao) -> 14
	 (11, """) -> 15
	 (11, booleano) -> 18
	 (11, ")") -> 27
	 (14, ",") -> 20
	 (14, ")") -> 27
	 (15, seq_caracteres) -> 16
	 (16, """) -> 17
	 (17, ",") -> 20
	 (17, ")") -> 27
	 (18, ",") -> 20
	 (18, ")") -> 27
	 (13, ",") -> 20
	 (13, ")") -> 27
	 (19, ",") -> 20
	 (19, ")") -> 27
	 (20, expressao) -> 22
	 (20, """) -> 23
	 (20, booleano) -> 26
	 (22, ",") -> 20
	 (22, ")") -> 27
	 (23, seq_caracteres) -> 24
	 (24, """) -> 25
	 (25, ",") -> 20
	 (25, ")") -> 27
	 (26, ",") -> 20
	 (26, ")") -> 27
	 (21, ",") -> 20
	 (21, ")") -> 27
	 (12, ")") -> 27
	 (27, "*") -> 34
	 (27, "/") -> 35
	 (27, "+") -> 68
	 (27, "-") -> 69
	 (28, "*") -> 34
	 (28, "/") -> 35
	 (28, "+") -> 68
	 (28, "-") -> 69
	 (29, expressao) -> 30
	 (30, ")") -> 31
	 (31, "*") -> 34
	 (31, "/") -> 35
	 (31, "+") -> 68
	 (31, "-") -> 69
	 (2, "*") -> 34
	 (2, "/") -> 35
	 (2, "+") -> 68
	 (2, "-") -> 69
	 (32, "*") -> 34
	 (32, "/") -> 35
	 (32, "+") -> 68
	 (32, "-") -> 69
	 (34, numero) -> 62
	 (34, "(") -> 63
	 (34, identificador) -> 135
	 (35, numero) -> 62
	 (35, "(") -> 63
	 (35, identificador) -> 136
	 (33, numero) -> 62
	 (33, "(") -> 63
	 (33, identificador) -> 137
	 (37, "[") -> 39
	 (37, "*") -> 34
	 (37, "/") -> 35
	 (37, "+") -> 68
	 (37, "-") -> 69
	 (39, numero) -> 41
	 (39, expressao) -> 42
	 (41, "]") -> 43
	 (42, "]") -> 43
	 (40, "]") -> 43
	 (43, "*") -> 34
	 (43, "/") -> 35
	 (43, "+") -> 68
	 (43, "-") -> 69
	 (38, "*") -> 34
	 (38, "/") -> 35
	 (38, "+") -> 68
	 (38, "-") -> 69
	 (44, "(") -> 45
	 (45, expressao) -> 48
	 (45, """) -> 49
	 (45, booleano) -> 52
	 (45, ")") -> 61
	 (48, ",") -> 54
	 (48, ")") -> 61
	 (49, seq_caracteres) -> 50
	 (50, """) -> 51
	 (51, ",") -> 54
	 (51, ")") -> 61
	 (52, ",") -> 54
	 (52, ")") -> 61
	 (47, ",") -> 54
	 (47, ")") -> 61
	 (53, ",") -> 54
	 (53, ")") -> 61
	 (54, expressao) -> 56
	 (54, """) -> 57
	 (54, booleano) -> 60
	 (56, ",") -> 54
	 (56, ")") -> 61
	 (57, seq_caracteres) -> 58
	 (58, """) -> 59
	 (59, ",") -> 54
	 (59, ")") -> 61
	 (60, ",") -> 54
	 (60, ")") -> 61
	 (55, ",") -> 54
	 (55, ")") -> 61
	 (46, ")") -> 61
	 (61, "*") -> 34
	 (61, "/") -> 35
	 (61, "+") -> 68
	 (61, "-") -> 69
	 (62, "*") -> 34
	 (62, "/") -> 35
	 (62, "+") -> 68
	 (62, "-") -> 69
	 (63, expressao) -> 64
	 (64, ")") -> 65
	 (65, "*") -> 34
	 (65, "/") -> 35
	 (65, "+") -> 68
	 (65, "-") -> 69
	 (36, "*") -> 34
	 (36, "/") -> 35
	 (36, "+") -> 68
	 (36, "-") -> 69
	 (66, "+") -> 68
	 (66, "-") -> 69
	 (68, numero) -> 96
	 (68, "(") -> 97
	 (68, identificador) -> 138
	 (69, numero) -> 96
	 (69, "(") -> 97
	 (69, identificador) -> 139
	 (67, numero) -> 96
	 (67, "(") -> 97
	 (67, identificador) -> 140
	 (71, "[") -> 73
	 (71, "*") -> 102
	 (71, "/") -> 103
	 (71, "+") -> 68
	 (71, "-") -> 69
	 (73, numero) -> 75
	 (73, expressao) -> 76
	 (75, "]") -> 77
	 (76, "]") -> 77
	 (74, "]") -> 77
	 (77, "*") -> 102
	 (77, "/") -> 103
	 (77, "+") -> 68
	 (77, "-") -> 69
	 (72, "*") -> 102
	 (72, "/") -> 103
	 (72, "+") -> 68
	 (72, "-") -> 69
	 (78, "(") -> 79
	 (79, expressao) -> 82
	 (79, """) -> 83
	 (79, booleano) -> 86
	 (79, ")") -> 95
	 (82, ",") -> 88
	 (82, ")") -> 95
	 (83, seq_caracteres) -> 84
	 (84, """) -> 85
	 (85, ",") -> 88
	 (85, ")") -> 95
	 (86, ",") -> 88
	 (86, ")") -> 95
	 (81, ",") -> 88
	 (81, ")") -> 95
	 (87, ",") -> 88
	 (87, ")") -> 95
	 (88, expressao) -> 90
	 (88, """) -> 91
	 (88, booleano) -> 94
	 (90, ",") -> 88
	 (90, ")") -> 95
	 (91, seq_caracteres) -> 92
	 (92, """) -> 93
	 (93, ",") -> 88
	 (93, ")") -> 95
	 (94, ",") -> 88
	 (94, ")") -> 95
	 (89, ",") -> 88
	 (89, ")") -> 95
	 (80, ")") -> 95
	 (95, "*") -> 102
	 (95, "/") -> 103
	 (95, "+") -> 68
	 (95, "-") -> 69
	 (96, "*") -> 102
	 (96, "/") -> 103
	 (96, "+") -> 68
	 (96, "-") -> 69
	 (97, expressao) -> 98
	 (98, ")") -> 99
	 (99, "*") -> 102
	 (99, "/") -> 103
	 (99, "+") -> 68
	 (99, "-") -> 69
	 (70, "*") -> 102
	 (70, "/") -> 103
	 (70, "+") -> 68
	 (70, "-") -> 69
	 (100, "*") -> 102
	 (100, "/") -> 103
	 (100, "+") -> 68
	 (100, "-") -> 69
	 (102, numero) -> 130
	 (102, "(") -> 131
	 (102, identificador) -> 141
	 (103, numero) -> 130
	 (103, "(") -> 131
	 (103, identificador) -> 142
	 (101, numero) -> 130
	 (101, "(") -> 131
	 (101, identificador) -> 143
	 (105, "[") -> 107
	 (105, "*") -> 102
	 (105, "/") -> 103
	 (105, "+") -> 68
	 (105, "-") -> 69
	 (107, numero) -> 109
	 (107, expressao) -> 110
	 (109, "]") -> 111
	 (110, "]") -> 111
	 (108, "]") -> 111
	 (111, "*") -> 102
	 (111, "/") -> 103
	 (111, "+") -> 68
	 (111, "-") -> 69
	 (106, "*") -> 102
	 (106, "/") -> 103
	 (106, "+") -> 68
	 (106, "-") -> 69
	 (112, "(") -> 113
	 (113, expressao) -> 116
	 (113, """) -> 117
	 (113, booleano) -> 120
	 (113, ")") -> 129
	 (116, ",") -> 122
	 (116, ")") -> 129
	 (117, seq_caracteres) -> 118
	 (118, """) -> 119
	 (119, ",") -> 122
	 (119, ")") -> 129
	 (120, ",") -> 122
	 (120, ")") -> 129
	 (115, ",") -> 122
	 (115, ")") -> 129
	 (121, ",") -> 122
	 (121, ")") -> 129
	 (122, expressao) -> 124
	 (122, """) -> 125
	 (122, booleano) -> 128
	 (124, ",") -> 122
	 (124, ")") -> 129
	 (125, seq_caracteres) -> 126
	 (126, """) -> 127
	 (127, ",") -> 122
	 (127, ")") -> 129
	 (128, ",") -> 122
	 (128, ")") -> 129
	 (123, ",") -> 122
	 (123, ")") -> 129
	 (114, ")") -> 129
	 (129, "*") -> 102
	 (129, "/") -> 103
	 (129, "+") -> 68
	 (129, "-") -> 69
	 (130, "*") -> 102
	 (130, "/") -> 103
	 (130, "+") -> 68
	 (130, "-") -> 69
	 (131, expressao) -> 132
	 (132, ")") -> 133
	 (133, "*") -> 102
	 (133, "/") -> 103
	 (133, "+") -> 68
	 (133, "-") -> 69
	 (104, "*") -> 102
	 (104, "/") -> 103
	 (104, "+") -> 68
	 (104, "-") -> 69
	 (134, "[") -> 5
	 (134, "*") -> 34
	 (134, "/") -> 35
	 (134, "+") -> 68
	 (134, "-") -> 69
	 (134, "(") -> 11
	 (135, "[") -> 39
	 (135, "*") -> 34
	 (135, "/") -> 35
	 (135, "+") -> 68
	 (135, "-") -> 69
	 (135, "(") -> 45
	 (136, "[") -> 39
	 (136, "*") -> 34
	 (136, "/") -> 35
	 (136, "+") -> 68
	 (136, "-") -> 69
	 (136, "(") -> 45
	 (137, "[") -> 39
	 (137, "*") -> 34
	 (137, "/") -> 35
	 (137, "+") -> 68
	 (137, "-") -> 69
	 (137, "(") -> 45
	 (138, "[") -> 73
	 (138, "*") -> 102
	 (138, "/") -> 103
	 (138, "+") -> 68
	 (138, "-") -> 69
	 (138, "(") -> 79
	 (139, "[") -> 73
	 (139, "*") -> 102
	 (139, "/") -> 103
	 (139, "+") -> 68
	 (139, "-") -> 69
	 (139, "(") -> 79
	 (140, "[") -> 73
	 (140, "*") -> 102
	 (140, "/") -> 103
	 (140, "+") -> 68
	 (140, "-") -> 69
	 (140, "(") -> 79
	 (141, "[") -> 107
	 (141, "*") -> 102
	 (141, "/") -> 103
	 (141, "+") -> 68
	 (141, "-") -> 69
	 (141, "(") -> 113
	 (142, "[") -> 107
	 (142, "*") -> 102
	 (142, "/") -> 103
	 (142, "+") -> 68
	 (142, "-") -> 69
	 (142, "(") -> 113
	 (143, "[") -> 107
	 (143, "*") -> 102
	 (143, "/") -> 103
	 (143, "+") -> 68
	 (143, "-") -> 69
	 (143, "(") -> 113
4.tipo
	 final: 2, 3, 4, 1, 
	 (0, "inteiro") -> 2
	 (0, "caracteres") -> 3
	 (0, "booleano") -> 4
5.booleano
	 final: 2, 3, 1, 
	 (0, "true") -> 2
	 (0, "false") -> 3